### Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)


# spring.datasource.url= jdbc:mysql://localhost:3306/laptop?useSSL=false&allowPublicKeyRetrieval=true
# spring.datasource.username = ntrongkhanh
# spring.datasource.password = ntrongkhanh

server.port=${PORT:8443}

spring.datasource.url= jdbc:mysql://34.126.89.62:3306/laptop?useSSL=true&allowPublicKeyRetrieval=true
spring.datasource.username = root
spring.datasource.password = password

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update


laptop.app.jwtSecret= bezKoderSecretKey
laptop.app.jwtExpirationMs= 864000000
#
#
#http.port=8080

#server.port=8443
#
server.ssl.enabled=true
#
#
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:laptop.p12
# The password used to generate the certificate
server.ssl.key-store-password=password
# The alias mapped to the certificate
server.ssl.key-alias=laptop

#trust store location
trust.store=classpath:laptop.p12
#trust store password
trust.store.password=password
